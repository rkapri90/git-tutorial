
Working Locally Commands
Git Working Locally Commands
 

 Lecture Command Listing - Working Locally, Part One
 pwd
 git status
 mate README.md
 git status
 git add README.md
 git status
 git commit -m "Adding some ipsum"
 clear
 git status
 mate README.md
 git status
 git commit -am "Adding more ipsum"
 git status
  

  Lecture Command Listing - Working Locally, Part Two
  pwd
  git status
  clear
  mate index.html
  git status
  git add index.html
  git status
  mate README.md
  git status
  clear
  git status
  git add README.md
  git status
  git commit -m "A few changes for the website"
  clear
  mate README.md
  mate index.html
  git status
  git add .
  git status
  git commit -m "A few more changes for website"
  clear
  mate README.md
  git status
  git add README.md
  git status
  git reset HEAD README.md
  clear
  git status
  mate README.md
  git checkout -- README.md
  mate README.md
  git status
   

   Command Reference
   Express Commit for Tracked files

   git commit -am "Awesome commit message"
   Use the -a parameter with the git commit command to directly commit newly modified tracked files. Warning: Only do this for small changes. Tracked files are files that have been previously added to Git (committed or staged).

   Adding All Changed Files

   git add .
   The period parameter for the git add command will recursively add all new and newly modified files.

   Unstage File

   git reset HEAD file-name
   Following the above command will "unstage" the specified file from Git's staging area (aka index).

   Backout Working Directory Changes

   git checkout -- file-name
   Following the above command will back out any changes made to the specified file and replace it with the version last committed in Git


